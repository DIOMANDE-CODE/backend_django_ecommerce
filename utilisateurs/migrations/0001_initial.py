# Generated by Django 5.2.3 on 2025-09-27 18:52

import django.core.validators
from django.db import migrations, models


class Migration(migrations.Migration):

    initial = True

    dependencies = [
        ('auth', '0012_alter_user_first_name_max_length'),
    ]

    operations = [
        migrations.CreateModel(
            name='Utilisateur',
            fields=[
                ('id', models.BigAutoField(auto_created=True, primary_key=True, serialize=False, verbose_name='ID')),
                ('password', models.CharField(max_length=128, verbose_name='password')),
                ('last_login', models.DateTimeField(blank=True, null=True, verbose_name='last login')),
                ('is_superuser', models.BooleanField(default=False, help_text='Designates that this user has all permissions without explicitly assigning them.', verbose_name='superuser status')),
                ('email', models.EmailField(max_length=254, unique=True, verbose_name='Entrez votre adresse Email')),
                ('nom_utilisateur', models.EmailField(max_length=50, verbose_name='Entrez votre nom')),
                ('prenoms_utlisateur', models.EmailField(max_length=200, verbose_name='Entrez votre prenoms')),
                ('numero_tel_utilisateur', models.CharField(max_length=30, validators=[django.core.validators.RegexValidator(message="Le numéro doit être au format : '+2250700000000' (jusqu'à 15 chiffres).", regex='^\\+?1?\\d{9,15}$')], verbose_name='Entrez votre numero de téléphone')),
                ('photo_utilisateur', models.ImageField(upload_to='photo_profil_utilisateur/')),
                ('est_client', models.BooleanField(default=True)),
                ('est_vendeur', models.BooleanField(default=False)),
                ('is_active', models.BooleanField(default=True)),
                ('is_staff', models.BooleanField(default=False)),
                ('created_at', models.DateTimeField(auto_now_add=True)),
                ('updated_at', models.DateTimeField(auto_now=True)),
                ('groups', models.ManyToManyField(blank=True, help_text='The groups this user belongs to. A user will get all permissions granted to each of their groups.', related_name='user_set', related_query_name='user', to='auth.group', verbose_name='groups')),
                ('user_permissions', models.ManyToManyField(blank=True, help_text='Specific permissions for this user.', related_name='user_set', related_query_name='user', to='auth.permission', verbose_name='user permissions')),
            ],
            options={
                'abstract': False,
            },
        ),
    ]
